{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Documents\\\\Code\\\\Easterseals\\\\InitialQuestionnaireType2.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";\nvar data = [{\n  question: 'I am familiar with the interview process'\n}, {\n  question: 'I am comfortable having an interview over video chat'\n}, {\n  question: 'I know how to use STAR statements to communicate my value'\n}, {\n  question: 'I know how much money I need to make in my next job'\n}, {}];\n\nvar InitialQuestionnaireType2 = function InitialQuestionnaireType2(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      response = _useState2[0],\n      getQuestionResponse = _useState2[1];\n\n  var questionResponse = function questionResponse(response) {\n    responses[questionNum] = response;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \" Question #5 \"), React.createElement(View, {\n    style: styles.questionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \" Select True (Thumbs Up) or False (Thumbs Down) for the following statements: \")), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 8\n    }\n  }, \" I am familiar with the interview process \"), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 8\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerGreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.iconButton,\n    name: \"thumb-up\",\n    color: \"green\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerRed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"thumb-down\",\n    color: \"red\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 14\n    }\n  }))), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 8\n    }\n  }, \" I am comfortable having an interview over video chat \"), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 8\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerGreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.iconButton,\n    name: \"thumb-up\",\n    color: \"green\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerRed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"thumb-down\",\n    color: \"red\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }))), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 8\n    }\n  }, \"I know how to use STAR statements to communicate my value\"), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerGreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.iconButton,\n    name: \"thumb-up\",\n    color: \"green\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 14\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerRed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"thumb-down\",\n    color: \"red\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 14\n    }\n  }))), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 8\n    }\n  }, \" I know how much money I need to make in my next job \"), React.createElement(View, {\n    style: styles.buttonView,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerGreen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    style: styles.iconButton,\n    name: \"thumb-up\",\n    color: \"green\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 14\n    }\n  })), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainerRed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }\n  }, React.createElement(MaterialCommunityIcons, {\n    name: \"thumb-down\",\n    color: \"red\",\n    size: 15,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 14\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: [styles.defaultButton, {\n      padding: 10\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 12\n    }\n  }, \" Submit \")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 40\n  },\n  contentContainer: {\n    padding: 20\n  },\n  button: {\n    padding: 20,\n    fontSize: 15,\n    fontFamily: \"arial\",\n    textAlign: \"center\",\n    color: \"white\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  buttonContainer: {\n    width: \"20%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    padding: 20,\n    borderWidth: 2,\n    borderColor: \"#004473\"\n  },\n  buttonContainerRed: {\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n    borderColor: \"red\"\n  },\n  buttonContainerGreen: {\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    justifyContent: \"center\",\n    borderWidth: 2,\n    borderColor: \"green\"\n  },\n  questionContainer: {\n    width: \"70%\",\n    margin: 20,\n    alignItems: \"center\",\n    padding: 10\n  },\n  navBtnContainer: {\n    margin: 20\n  },\n  reviewQuestionnaireContainer: {\n    backgroundColor: \"#FFF\",\n    padding: 10,\n    width: \"30%\",\n    borderColor: \"#004473\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    margin: 10\n  },\n  defaultButton: {\n    backgroundColor: \"#004473\",\n    width: \"15%\",\n    margin: 20,\n    marginTop: 30\n  },\n  textButton: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 18\n  },\n  buttonView: {\n    flex: 1,\n    flexDirection: 'row'\n  },\n  iconButton: {}\n});\nexport default InitialQuestionnaireType2;","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Documents/Code/Easterseals/InitialQuestionnaireType2.js"],"names":["React","useState","NavigationContainer","createStackNavigator","StatusBar","MaterialCommunityIcons","data","question","InitialQuestionnaireType2","navigation","response","getQuestionResponse","questionResponse","responses","questionNum","styles","container","questionContainer","buttonView","buttonContainerGreen","iconButton","buttonContainerRed","defaultButton","padding","textButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","contentContainer","button","fontSize","fontFamily","textAlign","color","borderRadius","borderWidth","borderColor","buttonContainer","width","margin","height","navBtnContainer","reviewQuestionnaireContainer","marginTop","fontWeight","flexDirection"],"mappings":";;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;AAEA,OAAOC,sBAAP;AAEC,IAAIC,IAAI,GAAG,CACR;AACIC,EAAAA,QAAQ,EAAE;AADd,CADQ,EAIR;AACIA,EAAAA,QAAQ,EAAE;AADd,CAJQ,EAOR;AACIA,EAAAA,QAAQ,EAAE;AADd,CAPQ,EAUR;AACIA,EAAAA,QAAQ,EAAE;AADd,CAVQ,EAaR,EAbQ,CAAX;;AAgBD,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACZR,QAAQ,EADI;AAAA;AAAA,MAC7CS,QAD6C;AAAA,MACnCC,mBADmC;;AAGlD,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,QAAD,EAAc;AACrCG,IAAAA,SAAS,CAACC,WAAD,CAAT,GAAyBJ,QAAzB;AAED,GAHD;;AAKA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEK,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAID,MAAM,CAACE,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFADF,CAJF,EAQG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDARH,EASG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIF,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIH,MAAM,CAACI,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAIJ,MAAM,CAACK,UADlB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADJ,EASI,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIL,MAAM,CAACM,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAG,KAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATJ,CATH,EA2BG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DA3BH,EA4BG,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIN,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACD,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIH,MAAM,CAACI,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAIJ,MAAM,CAACK,UADlB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADC,EASD,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIL,MAAM,CAACM,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAG,KAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATC,CA5BH,EA8CG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEA9CH,EA+CI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIN,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIH,MAAM,CAACI,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAIJ,MAAM,CAACK,UADlB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,EASG,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIL,MAAM,CAACM,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAG,KAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATH,CA/CJ,EAiEG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAjEH,EAkEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIN,MAAM,CAACG,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIH,MAAM,CAACI,oBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,KAAK,EAAIJ,MAAM,CAACK,UADlB;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,IAAI,EAAE,EAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADH,EASG,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAIL,MAAM,CAACM,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,sBAAD;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,KAAK,EAAG,KAFV;AAGE,IAAA,IAAI,EAAE,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATH,CAlEJ,EAoFG,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI,CAACN,MAAM,CAACO,aAAR,EAAuB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAvB,CADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIR,MAAM,CAACS,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,CApFH,EAyFE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzFF,CADF;AA6FD,CArGD;;AAuGA,IAAMT,MAAM,GAAGU,UAAU,CAACC,MAAX,CAAkB;AAC/BV,EAAAA,SAAS,EAAE;AACTW,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,SAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTP,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ9BQ,EAAAA,gBAAgB,EAAE;AACjBR,IAAAA,OAAO,EAAE;AADQ,GARY;AAW9BS,EAAAA,MAAM,EAAE;AACLT,IAAAA,OAAO,EAAE,EADJ;AAELU,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,OAHP;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,KAAK,EAAE,OALF;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLC,IAAAA,WAAW,EAAE,CAPR;AAQLC,IAAAA,WAAW,EAAE;AARR,GAXsB;AAqB7BC,EAAAA,eAAe,EAAE;AACfC,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfd,IAAAA,eAAe,EAAE,OAHF;AAIfS,IAAAA,YAAY,EAAE,EAJC;AAKfR,IAAAA,UAAU,EAAE,QALG;AAMfM,IAAAA,SAAS,EAAE,QANI;AAOfZ,IAAAA,OAAO,EAAE,EAPM;AAQfe,IAAAA,WAAW,EAAE,CARE;AASfC,IAAAA,WAAW,EAAE;AATE,GArBY;AAgC7BlB,EAAAA,kBAAkB,EAAE;AAClBoB,IAAAA,KAAK,EAAE,EADW;AAElBE,IAAAA,MAAM,EAAE,EAFU;AAGlBf,IAAAA,eAAe,EAAE,OAHC;AAIlBS,IAAAA,YAAY,EAAE,EAJI;AAKlBR,IAAAA,UAAU,EAAE,QALM;AAMlBM,IAAAA,SAAS,EAAE,QANO;AAOlBL,IAAAA,cAAc,EAAC,QAPG;AAQlBQ,IAAAA,WAAW,EAAE,CARK;AASlBC,IAAAA,WAAW,EAAE;AATK,GAhCS;AA2C7BpB,EAAAA,oBAAoB,EAAE;AACnBsB,IAAAA,KAAK,EAAE,EADY;AAEpBE,IAAAA,MAAM,EAAE,EAFY;AAGpBf,IAAAA,eAAe,EAAE,OAHG;AAIpBS,IAAAA,YAAY,EAAE,EAJM;AAKpBR,IAAAA,UAAU,EAAE,QALQ;AAMpBM,IAAAA,SAAS,EAAE,QANS;AAOpBL,IAAAA,cAAc,EAAC,QAPK;AAQpBQ,IAAAA,WAAW,EAAE,CARO;AASpBC,IAAAA,WAAW,EAAE;AATO,GA3CO;AAsD7BtB,EAAAA,iBAAiB,EAAE;AACfwB,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfb,IAAAA,UAAU,EAAE,QAHG;AAIfN,IAAAA,OAAO,EAAE;AAJM,GAtDU;AA4D7BqB,EAAAA,eAAe,EAAE;AACbF,IAAAA,MAAM,EAAE;AADK,GA5DY;AA+D7BG,EAAAA,4BAA4B,EAAE;AAC1BjB,IAAAA,eAAe,EAAE,MADS;AAE1BL,IAAAA,OAAO,EAAE,EAFiB;AAG1BkB,IAAAA,KAAK,EAAE,KAHmB;AAI1BF,IAAAA,WAAW,EAAE,SAJa;AAK1BF,IAAAA,YAAY,EAAE,EALY;AAM1BR,IAAAA,UAAU,EAAE,QANc;AAO1Ba,IAAAA,MAAM,EAAE;AAPkB,GA/DD;AAwE7BpB,EAAAA,aAAa,EAAE;AACXM,IAAAA,eAAe,EAAE,SADN;AAEXa,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,MAAM,EAAE,EAHG;AAIXI,IAAAA,SAAS,EAAC;AAJC,GAxEc;AA8E7BtB,EAAAA,UAAU,EAAE;AACRY,IAAAA,KAAK,EAAE,OADC;AAERW,IAAAA,UAAU,EAAE,MAFJ;AAGRlB,IAAAA,UAAU,EAAE,QAHJ;AAIRM,IAAAA,SAAS,EAAE,QAJH;AAKRF,IAAAA,QAAQ,EAAE;AALF,GA9EiB;AAqF7Bf,EAAAA,UAAU,EAAE;AACRS,IAAAA,IAAI,EAAC,CADG;AAERqB,IAAAA,aAAa,EAAE;AAFP,GArFiB;AAyF7B5B,EAAAA,UAAU,EAAE;AAzFiB,CAAlB,CAAf;AA6FA,eAAeZ,yBAAf","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity} from 'react-native';\r\nimport MaterialCommunityIcons from 'react-native-vector-icons/MaterialCommunityIcons';\r\n\r\n var data = [\r\n    {\r\n        question: 'I am familiar with the interview process'\r\n    },\r\n    {\r\n        question: 'I am comfortable having an interview over video chat'\r\n    },\r\n    {\r\n        question: 'I know how to use STAR statements to communicate my value'\r\n    },\r\n    {\r\n        question: 'I know how much money I need to make in my next job'\r\n    },\r\n    {},\r\n  ];\r\n\r\nconst InitialQuestionnaireType2 = ({navigation}) => {\r\nconst [response, getQuestionResponse] = useState();\r\n\r\n  const questionResponse = (response) => {\r\n    responses[questionNum] = response;\r\n  //store user's response to question\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Text> Question #5 </Text>\r\n\r\n      <View style = {styles.questionContainer}>\r\n        <Text> Select True (Thumbs Up) or False (Thumbs Down) for the following statements: </Text>\r\n      </View>\r\n\r\n       <Text> I am familiar with the interview process </Text>\r\n       <View style = {styles.buttonView}>\r\n           <TouchableOpacity style = {styles.buttonContainerGreen}>\r\n             <MaterialCommunityIcons\r\n               style = {styles.iconButton}\r\n               name=\"thumb-up\"\r\n               color=\"green\"\r\n               size={15}\r\n             />\r\n             </TouchableOpacity>\r\n           <TouchableOpacity style = {styles.buttonContainerRed}>\r\n             <MaterialCommunityIcons\r\n               name=\"thumb-down\"\r\n               color = \"red\"\r\n               size={15}\r\n             />\r\n           </TouchableOpacity>\r\n       </View>\r\n\r\n       <Text> I am comfortable having an interview over video chat </Text>\r\n       <View style = {styles.buttonView}>\r\n      <TouchableOpacity style = {styles.buttonContainerGreen}>\r\n        <MaterialCommunityIcons\r\n          style = {styles.iconButton}\r\n          name=\"thumb-up\"\r\n          color=\"green\"\r\n          size={15}\r\n        />\r\n        </TouchableOpacity>\r\n      <TouchableOpacity style = {styles.buttonContainerRed}>\r\n        <MaterialCommunityIcons\r\n          name=\"thumb-down\"\r\n          color = \"red\"\r\n          size={15}\r\n        />\r\n      </TouchableOpacity>\r\n  </View>\r\n\r\n       <Text>I know how to use STAR statements to communicate my value</Text>\r\n        <View style = {styles.buttonView}>\r\n           <TouchableOpacity style = {styles.buttonContainerGreen}>\r\n             <MaterialCommunityIcons\r\n               style = {styles.iconButton}\r\n               name=\"thumb-up\"\r\n               color=\"green\"\r\n               size={15}\r\n             />\r\n             </TouchableOpacity>\r\n           <TouchableOpacity style = {styles.buttonContainerRed}>\r\n             <MaterialCommunityIcons\r\n               name=\"thumb-down\"\r\n               color = \"red\"\r\n               size={15}\r\n             />\r\n           </TouchableOpacity>\r\n       </View>\r\n\r\n       <Text> I know how much money I need to make in my next job </Text>\r\n        <View style = {styles.buttonView}>\r\n           <TouchableOpacity style = {styles.buttonContainerGreen}>\r\n             <MaterialCommunityIcons\r\n               style = {styles.iconButton}\r\n               name=\"thumb-up\"\r\n               color=\"green\"\r\n               size={15}\r\n             />\r\n             </TouchableOpacity>\r\n           <TouchableOpacity style = {styles.buttonContainerRed}>\r\n             <MaterialCommunityIcons\r\n               name=\"thumb-down\"\r\n               color = \"red\"\r\n               size={15}\r\n             />\r\n           </TouchableOpacity>\r\n       </View>\r\n\r\n       <TouchableOpacity\r\n           style = {[styles.defaultButton, {padding: 10}]}>\r\n           <Text style = {styles.textButton}> Submit </Text>\r\n       </TouchableOpacity>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#EFEFEF',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 40\r\n   },\r\n   contentContainer: {\r\n    padding: 20\r\n   },\r\n   button: {\r\n      padding: 20,\r\n      fontSize: 15,\r\n      fontFamily: \"arial\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      borderRadius: 20,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n    },\r\n    buttonContainer: {\r\n      width: \"20%\",\r\n      margin: 10,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 40,\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: 20,\r\n      borderWidth: 2,\r\n      borderColor: \"#004473\"\r\n    },\r\n    buttonContainerRed: {\r\n      width: 30,\r\n      height: 30,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 40,\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent:\"center\",\r\n      borderWidth: 2,\r\n      borderColor: \"red\"\r\n    },\r\n    buttonContainerGreen: {\r\n       width: 30,\r\n      height: 30,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 40,\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      justifyContent:\"center\",\r\n      borderWidth: 2,\r\n      borderColor: \"green\",\r\n    },\r\n    questionContainer: {\r\n        width: \"70%\",\r\n        margin: 20,\r\n        alignItems: \"center\",\r\n        padding: 10\r\n    },\r\n    navBtnContainer: {\r\n        margin: 20\r\n    },\r\n    reviewQuestionnaireContainer: {\r\n        backgroundColor: \"#FFF\",\r\n        padding: 10,\r\n        width: \"30%\",\r\n        borderColor: \"#004473\",\r\n        borderRadius: 20,\r\n        alignItems: \"center\",\r\n        margin: 10\r\n    },\r\n    defaultButton: {\r\n        backgroundColor: \"#004473\",\r\n        width: \"15%\",\r\n        margin: 20,\r\n        marginTop:30\r\n    },\r\n    textButton: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: 18\r\n    },\r\n    buttonView: {\r\n        flex:1,\r\n        flexDirection: 'row',\r\n    },\r\n    iconButton: {\r\n    }\r\n});\r\n\r\nexport default InitialQuestionnaireType2;\r\n"]},"metadata":{},"sourceType":"module"}