{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Documents\\\\Code\\\\Easterseals\\\\InitialQuestionnaire.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nvar data = [{\n  question: 'I know who I am, the marketable skills I possess, and the job that I want.',\n  response: [\"True\", \"False\"]\n}, {\n  question: 'I would like to learn how to research: (Select all that apply)',\n  response: [\"Industries\", \"Companies\", \"Hiring Managers\", \"Occupations\", \"Salary\"]\n}, {\n  question: 'Regarding my resume: (Only check one answer)',\n  response: [\"I need a resume\", \"I want one-on-one resume assistance\", \"I want to learn how to write my own resume\", \"I don’t need resume assistance\"]\n}, {\n  question: 'I could use help with: (Select all that apply)',\n  response: [\"Using LinkedIn\", \"My elevator pitch\", \"Writing a professional email\", \"Cover letters\"]\n}, {\n  question: 'Select True (Thumbs Up) or False (Thumbs Down) for the following statements:'\n}, {}];\n\nvar InitialQuestionnaire = function InitialQuestionnaire(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionNum = _useState2[0],\n      setQuestionNum = _useState2[1];\n\n  var _useState3 = useState(data[0].question),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionText = _useState4[0],\n      setQuestionText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      getQuestionResponse = _useState6[1];\n\n  var data = [{\n    question: 'I know who I am, the marketable skills I possess, and the job that I want.',\n    response: [\"True\", \"False\"]\n  }, {\n    question: 'I would like to learn how to research: (Select all that apply)',\n    response: [\"Industries\", \"Companies\", \"Hiring Managers\", \"Occupations\", \"Salary\"]\n  }, {\n    question: 'Regarding my resume: (Only check one answer)',\n    response: [\"I need a resume\", \"I want one-on-one resume assistance\", \"I want to learn how to write my own resume\", \"I don’t need resume assistance\"]\n  }, {\n    question: 'I could use help with: (Select all that apply)',\n    response: [\"Using LinkedIn\", \"My elevator pitch\", \"Writing a professional email\", \"Cover letters\"]\n  }, {\n    question: 'Select True (Thumbs Up) or False (Thumbs Down) for the following statements:'\n  }, {}];\n\n  var QuestionOption = function QuestionOption() {\n    numOptions = data.response[questionNum - 1];\n    numOptions.map(function (option) {\n      return React.createElement(TouchableOpacity, {\n        style: styles.buttonContainer,\n        onPress: function onPress(event) {\n          return questionResponse(option);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }\n      }, option));\n    });\n  };\n\n  var changeQuestion = function changeQuestion() {\n    setQuestionText(data.question[questionNum - 1]);\n  };\n\n  var nextQuestion = function nextQuestion() {\n    if (questionNum < 8) {\n      setQuestionNum(questionNum + 1);\n      changeQuestion();\n    } else {\n      navigation.navigate('ReviewQuestionnaire');\n    }\n  };\n\n  var prevQuestion = function prevQuestion() {\n    if (questionNum > 1) {\n      setQuestionNum(questionNum - 1);\n      changeQuestion();\n    }\n  };\n\n  var questionResponse = function questionResponse(response) {\n    responses[questionNum] = response;\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, \" Question #\", questionNum, \" \"), React.createElement(View, {\n    style: styles.questionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, \" \", questionText, \" \")), React.createElement(QuestionOption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 8\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.defaultButton, {\n      padding: 10\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 12\n    }\n  }, \" Submit \")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 40\n  },\n  contentContainer: {\n    padding: 20\n  },\n  button: {\n    padding: 20,\n    fontSize: 15,\n    fontFamily: \"arial\",\n    textAlign: \"center\",\n    color: \"white\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  buttonContainer: {\n    width: \"20%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    padding: 20,\n    borderWidth: 2,\n    borderColor: \"#004473\"\n  },\n  questionContainer: {\n    width: \"70%\",\n    margin: 20,\n    alignItems: \"center\",\n    padding: 10\n  },\n  navBtnContainer: {\n    margin: 20\n  },\n  reviewQuestionnaireContainer: {\n    backgroundColor: \"#FFF\",\n    padding: 10,\n    width: \"30%\",\n    borderColor: \"#004473\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    margin: 10\n  },\n  defaultButton: {\n    backgroundColor: \"#004473\",\n    width: \"15%\",\n    margin: 20,\n    marginTop: 30\n  },\n  textButton: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 18\n  }\n});\nexport default InitialQuestionnaire;","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Documents/Code/Easterseals/InitialQuestionnaire.js"],"names":["React","useState","NavigationContainer","createStackNavigator","StatusBar","data","question","response","InitialQuestionnaire","navigation","questionNum","setQuestionNum","questionText","setQuestionText","getQuestionResponse","QuestionOption","numOptions","map","option","styles","buttonContainer","event","questionResponse","changeQuestion","nextQuestion","navigate","prevQuestion","responses","container","questionContainer","defaultButton","padding","textButton","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","contentContainer","button","fontSize","fontFamily","textAlign","color","borderRadius","borderWidth","borderColor","width","margin","navBtnContainer","reviewQuestionnaireContainer","marginTop","fontWeight"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity} from 'react-native';\r\n\r\n var data = [\r\n    {\r\n        question: 'I know who I am, the marketable skills I possess, and the job that I want.',\r\n        response: [\"True\", \"False\"]\r\n    },\r\n    {\r\n        question: 'I would like to learn how to research: (Select all that apply)',\r\n        response: [\"Industries\", \"Companies\", \"Hiring Managers\", \"Occupations\", \"Salary\"]\r\n    },\r\n    {\r\n        question: 'Regarding my resume: (Only check one answer)',\r\n        response: [\"I need a resume\", \"I want one-on-one resume assistance\", \"I want to learn how to write my own resume\", \"I don’t need resume assistance\"]\r\n    },\r\n    {\r\n        question: 'I could use help with: (Select all that apply)',\r\n        response: [\"Using LinkedIn\", \"My elevator pitch\", \"Writing a professional email\", \"Cover letters\"]\r\n    },\r\n    {\r\n        question: 'Select True (Thumbs Up) or False (Thumbs Down) for the following statements:'\r\n    },\r\n    {},\r\n  ];\r\n\r\nconst InitialQuestionnaire = ({navigation}) => {\r\n\r\nconst [questionNum, setQuestionNum] = useState(1);\r\nconst [questionText, setQuestionText] = useState(data[0].question);\r\nconst [response, getQuestionResponse] = useState();\r\n\r\n var data = [\r\n    {\r\n        question: 'I know who I am, the marketable skills I possess, and the job that I want.',\r\n        response: [\"True\", \"False\"]\r\n    },\r\n    {\r\n        question: 'I would like to learn how to research: (Select all that apply)',\r\n        response: [\"Industries\", \"Companies\", \"Hiring Managers\", \"Occupations\", \"Salary\"]\r\n    },\r\n    {\r\n        question: 'Regarding my resume: (Only check one answer)',\r\n        response: [\"I need a resume\", \"I want one-on-one resume assistance\", \"I want to learn how to write my own resume\", \"I don’t need resume assistance\"]\r\n    },\r\n    {\r\n        question: 'I could use help with: (Select all that apply)',\r\n        response: [\"Using LinkedIn\", \"My elevator pitch\", \"Writing a professional email\", \"Cover letters\"]\r\n    },\r\n    {\r\n        question: 'Select True (Thumbs Up) or False (Thumbs Down) for the following statements:'\r\n    },\r\n    {},\r\n  ];\r\n  const QuestionOption = () => {\r\n    numOptions = data.response[questionNum-1]\r\n    numOptions.map((option) => {\r\n        return (\r\n            <TouchableOpacity\r\n              style = {styles.buttonContainer}\r\n              onPress={(event) => questionResponse(option)}>\r\n              <Text>{option}</Text>\r\n            </TouchableOpacity>\r\n        )\r\n    })\r\n  }\r\n\r\n  const changeQuestion = () => {\r\n    setQuestionText(data.question[questionNum-1]);\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    if (questionNum < 8) {\r\n        setQuestionNum(questionNum+1);\r\n        changeQuestion();\r\n    }\r\n    else {\r\n        navigation.navigate('ReviewQuestionnaire')\r\n    }\r\n  }\r\n  const prevQuestion = () => {\r\n    if (questionNum > 1) {\r\n        setQuestionNum(questionNum-1);\r\n        changeQuestion();\r\n    }\r\n  }\r\n  const questionResponse = (response) => {\r\n    responses[questionNum] = response;\r\n  //store user's response to question\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Text> Question #{ questionNum } </Text>\r\n\r\n      <View style = {styles.questionContainer}>\r\n        <Text> {questionText} </Text>\r\n      </View>\r\n\r\n       <QuestionOption></QuestionOption>\r\n\r\n       <TouchableOpacity\r\n           style = {[styles.defaultButton, {padding: 10}]}>\r\n           <Text style = {styles.textButton}> Submit </Text>\r\n       </TouchableOpacity>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#EFEFEF',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 40\r\n   },\r\n   contentContainer: {\r\n    padding: 20\r\n   },\r\n   button: {\r\n      padding: 20,\r\n      fontSize: 15,\r\n      fontFamily: \"arial\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      borderRadius: 20,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n    },\r\n    buttonContainer: {\r\n      width: \"20%\",\r\n      margin: 10,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 40,\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: 20,\r\n      borderWidth: 2,\r\n      borderColor: \"#004473\"\r\n    },\r\n    questionContainer: {\r\n        width: \"70%\",\r\n        margin: 20,\r\n        alignItems: \"center\",\r\n        padding: 10\r\n    },\r\n    navBtnContainer: {\r\n        margin: 20\r\n    },\r\n    reviewQuestionnaireContainer: {\r\n        backgroundColor: \"#FFF\",\r\n        padding: 10,\r\n        width: \"30%\",\r\n        borderColor: \"#004473\",\r\n        borderRadius: 20,\r\n        alignItems: \"center\",\r\n        margin: 10\r\n    },\r\n    defaultButton: {\r\n        backgroundColor: \"#004473\",\r\n        width: \"15%\",\r\n        margin: 20,\r\n        marginTop:30\r\n    },\r\n    textButton: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: 18\r\n    },\r\n});\r\n\r\nexport default InitialQuestionnaire;\r\n"]},"metadata":{},"sourceType":"module"}