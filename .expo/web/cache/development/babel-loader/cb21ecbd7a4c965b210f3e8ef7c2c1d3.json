{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Documents\\\\Code\\\\Easterseals\\\\Quiz.js\";\n\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\n\nvar InitialQuestionnaire = function InitialQuestionnaire(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionNum = _useState2[0],\n      setQuestionNum = _useState2[1];\n\n  var _useState3 = useState(\"I feel totally comfortable in my understanding of: \\n\\n • What employers want in an employee \\n • The tools I need to conduct an effective job search \\n • Goal setting and am able to set effective goals \\n • Setting a schedule for my daily tasks during job search \\n • How to dress appropriately for the job search\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionText = _useState4[0],\n      setQuestionText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      getQuestionResponse = _useState6[1];\n\n  var responses = new Array(8);\n\n  var ReviewQuestionnaire = function ReviewQuestionnaire(_ref2) {\n    var qNum = _ref2.qNum;\n    return React.createElement(View, {\n      style: styles.reviewQuestionnaireContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, \" Question \", qNum, \" \"), React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, \" Question 1.........\"), React.createElement(View, {\n      style: styles.buttonContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, React.createElement(Button, {\n      title: \"Agree\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    })));\n  };\n\n  var changeQuestion = function changeQuestion() {\n    if (questionNum == 1) setQuestionText(\"I feel totally comfortable in my understanding of: \\n\\n • What employers want in an employee \\n • The tools I need to conduct an effective job search \\n • Goal setting and am able to set effective goals \\n • Setting a schedule for my daily tasks during job search \\n • How to dress appropriately for the job search\");else if (questionNum == 2) setQuestionText(\"This is Question 2\");else if (questionNum == 3) setQuestionText(\"This is Question 3\");else if (questionNum == 4) setQuestionText(\"This is Question 4\");else if (questionNum == 5) setQuestionText(\"This is Question 5\");else if (questionNum == 6) setQuestionText(\"This is Question 6\");else if (questionNum == 7) setQuestionText(\"This is Question 7\");else if (questionNum == 8) setQuestionText(\"This is Question 8\");\n  };\n\n  var nextQuestion = function nextQuestion() {\n    if (questionNum < 8) {\n      setQuestionNum(questionNum + 1);\n      changeQuestion();\n    } else {\n      navigation.navigate('ReviewQuestionnaire');\n    }\n  };\n\n  var prevQuestion = function prevQuestion() {\n    if (questionNum > 1) {\n      setQuestionNum(questionNum - 1);\n      changeQuestion();\n    }\n  };\n\n  var questionResponse = function questionResponse(response) {\n    responses[questionNum] = response;\n  };\n\n  changeColor = function changeColor() {\n    setState = {\n      backgroundColor: 'white',\n      backgroundColor2: 'white',\n      pressed: false\n    };\n\n    if (!_this.state.pressed) {\n      _this.setState({\n        pressed: true,\n        backgroundColor: '#004473',\n        backgroundColor2: 'white'\n      });\n    } else {\n      _this.setState({\n        pressed: false,\n        backgroundColor: 'white',\n        backgroundColor2: '#004473'\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Question Question #\", questionNum, \" \"), React.createElement(View, {\n    style: styles.questionContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, \" \", questionText, \" \")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress(event) {\n      return questionResponse(\"Strongly Disagree\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, \"Strongly Disagree\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, {\n      backgroundColor: _this.state.backgroundColor\n    }],\n    onPress: function onPress() {\n      return _this.changeColor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"Strongly Disagree\")), React.createElement(TouchableOpacity, {\n    style: [styles.buttonContainer, {\n      backgroundColor: _this.state.backgroundColor\n    }],\n    onPress: function onPress() {\n      return _this.changeColor();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Strongly Disagree\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress(event) {\n      return questionResponse(\"Strongly Disagree\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 15\n    }\n  }, \"Strongly Disagree\")), React.createElement(TouchableOpacity, {\n    style: styles.buttonContainer,\n    onPress: function onPress(event) {\n      return questionResponse(\"Strongly Disagree\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, \"Strongly Disagree\")), React.createElement(TouchableOpacity, {\n    style: [styles.defaultButton, {\n      padding: 10\n    }],\n    onPress: function onPress() {\n      return navigation.navigate('AssessmentScore');\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }\n  }, React.createElement(Text, {\n    style: styles.textButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 12\n    }\n  }, \" Submit \")), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#EFEFEF',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 40\n  },\n  contentContainer: {\n    padding: 20\n  },\n  button: {\n    padding: 20,\n    fontSize: 15,\n    fontFamily: \"arial\",\n    textAlign: \"center\",\n    color: \"white\",\n    borderRadius: 20,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  buttonContainer: {\n    width: \"20%\",\n    margin: 10,\n    backgroundColor: \"white\",\n    borderRadius: 40,\n    alignItems: \"center\",\n    textAlign: \"center\",\n    padding: 20,\n    borderWidth: 2,\n    borderColor: \"#004473\"\n  },\n  questionContainer: {\n    width: \"70%\",\n    margin: 20,\n    alignItems: \"center\",\n    padding: 10\n  },\n  navBtnContainer: {\n    margin: 20\n  },\n  reviewQuestionnaireContainer: {\n    backgroundColor: \"#FFF\",\n    padding: 10,\n    width: \"30%\",\n    borderColor: \"#004473\",\n    borderRadius: 20,\n    alignItems: \"center\",\n    margin: 10\n  },\n  defaultButton: {\n    backgroundColor: \"#004473\",\n    width: \"15%\",\n    margin: 20,\n    marginTop: 30\n  },\n  textButton: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    fontSize: 18\n  }\n});\nexport default InitialQuestionnaire;","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Documents/Code/Easterseals/Quiz.js"],"names":["React","useState","NavigationContainer","createStackNavigator","StatusBar","InitialQuestionnaire","navigation","questionNum","setQuestionNum","questionText","setQuestionText","response","getQuestionResponse","responses","Array","ReviewQuestionnaire","qNum","styles","reviewQuestionnaireContainer","buttonContainer","changeQuestion","nextQuestion","navigate","prevQuestion","questionResponse","changeColor","setState","backgroundColor","backgroundColor2","pressed","state","container","questionContainer","event","defaultButton","padding","textButton","StyleSheet","create","flex","alignItems","justifyContent","contentContainer","button","fontSize","fontFamily","textAlign","color","borderRadius","borderWidth","borderColor","width","margin","navBtnContainer","marginTop","fontWeight"],"mappings":";;;;;AAAA,OAAO,8BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,SAAT,QAA0B,iBAA1B;;;;;;;AAGA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAkB;AAAA,MAAhBC,UAAgB,QAAhBA,UAAgB;;AAAA,kBACPL,QAAQ,CAAC,CAAD,CADD;AAAA;AAAA,MACtCM,WADsC;AAAA,MACzBC,cADyB;;AAAA,mBAELP,QAAQ,CAAC,4TAAD,CAFH;AAAA;AAAA,MAEtCQ,YAFsC;AAAA,MAExBC,eAFwB;;AAAA,mBAGLT,QAAQ,EAHH;AAAA;AAAA,MAGtCU,QAHsC;AAAA,MAG5BC,mBAH4B;;AAI7C,MAAMC,SAAS,GAAG,IAAIC,KAAJ,CAAU,CAAV,CAAlB;;AACA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,QAAY;AAAA,QAAVC,IAAU,SAAVA,IAAU;AACtC,WACI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIC,MAAM,CAACC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAiBF,IAAjB,MADJ,EAEI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAFJ,EAGI,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAIC,MAAM,CAACE,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAG,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAHJ,CADJ;AASD,GAVD;;AAYA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAIb,WAAW,IAAI,CAAnB,EACEG,eAAe,CAAC,4TAAD,CAAf,CADF,KAEK,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf,CADC,KAEA,IAAIH,WAAW,IAAI,CAAnB,EACDG,eAAe,CAAC,oBAAD,CAAf;AACL,GAjBD;;AAmBA,MAAMW,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAId,WAAW,GAAG,CAAlB,EAAqB;AACjBC,MAAAA,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;AACAa,MAAAA,cAAc;AACjB,KAHD,MAIK;AACDd,MAAAA,UAAU,CAACgB,QAAX,CAAoB,qBAApB;AACH;AACF,GARD;;AASA,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,QAAIhB,WAAW,GAAG,CAAlB,EAAqB;AACjBC,MAAAA,cAAc,CAACD,WAAW,GAAC,CAAb,CAAd;AACAa,MAAAA,cAAc;AACjB;AACF,GALD;;AAMA,MAAMI,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACb,QAAD,EAAc;AACrCE,IAAAA,SAAS,CAACN,WAAD,CAAT,GAAyBI,QAAzB;AAED,GAHD;;AAKAc,EAAAA,WAAW,GAAG,uBAAM;AACnBC,IAAAA,QAAQ,GAAC;AACJC,MAAAA,eAAe,EAAE,OADb;AAEJC,MAAAA,gBAAgB,EAAE,OAFd;AAGJC,MAAAA,OAAO,EAAE;AAHL,KAAT;;AAKG,QAAG,CAAC,KAAI,CAACC,KAAL,CAAWD,OAAf,EAAuB;AACpB,MAAA,KAAI,CAACH,QAAL,CAAc;AAAEG,QAAAA,OAAO,EAAE,IAAX;AAAgBF,QAAAA,eAAe,EAAE,SAAjC;AAA4CC,QAAAA,gBAAgB,EAAE;AAA9D,OAAd;AACF,KAFD,MAEO;AACL,MAAA,KAAI,CAACF,QAAL,CAAc;AAAEG,QAAAA,OAAO,EAAE,KAAX;AAAkBF,QAAAA,eAAe,EAAE,OAAnC;AAA4CC,QAAAA,gBAAgB,EAAE;AAA9D,OAAd;AACD;AACJ,GAXD;;AAYA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACc,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA2BxB,WAA3B,MAFF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIU,MAAM,CAACe,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAQvB,YAAR,MADF,CAJF,EAOE,oBAAC,gBAAD;AACQ,IAAA,KAAK,EAAIQ,MAAM,CAACE,eADxB;AAEQ,IAAA,OAAO,EAAE,iBAACc,KAAD;AAAA,aAAWT,gBAAgB,CAAC,mBAAD,CAA3B;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHR,CAPF,EAYE,oBAAC,gBAAD;AACQ,IAAA,KAAK,EAAI,CAACP,MAAM,CAACE,eAAR,EAAyB;AAACQ,MAAAA,eAAe,EAAE,KAAI,CAACG,KAAL,CAAWH;AAA7B,KAAzB,CADjB;AAEQ,IAAA,OAAO,EAAE;AAAA,aAAM,KAAI,CAACF,WAAL,EAAN;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHR,CAZF,EAiBE,oBAAC,gBAAD;AACc,IAAA,KAAK,EAAI,CAACR,MAAM,CAACE,eAAR,EAAyB;AAACQ,MAAAA,eAAe,EAAE,KAAI,CAACG,KAAL,CAAWH;AAA7B,KAAzB,CADvB;AAEc,IAAA,OAAO,EAAE;AAAA,aAAM,KAAI,CAACF,WAAL,EAAN;AAAA,KAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGc,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHd,CAjBF,EAsBE,oBAAC,gBAAD;AACQ,IAAA,KAAK,EAAIR,MAAM,CAACE,eADxB;AAEQ,IAAA,OAAO,EAAE,iBAACc,KAAD;AAAA,aAAWT,gBAAgB,CAAC,mBAAD,CAA3B;AAAA,KAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHR,CAtBF,EA2BE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAIP,MAAM,CAACE,eADlB;AAEE,IAAA,OAAO,EAAE,iBAACc,KAAD;AAAA,aAAWT,gBAAgB,CAAC,mBAAD,CAA3B;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAHF,CA3BF,EAgDG,oBAAC,gBAAD;AACI,IAAA,KAAK,EAAI,CAACP,MAAM,CAACiB,aAAR,EAAuB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAvB,CADb;AAEI,IAAA,OAAO,EAAE;AAAA,aAAM7B,UAAU,CAACgB,QAAX,CAAoB,iBAApB,CAAN;AAAA,KAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAIL,MAAM,CAACmB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,CAhDH,EAsDE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtDF,CADF;AA0DD,CA9HD;;AAgIA,IAAMnB,MAAM,GAAGoB,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETZ,IAAAA,eAAe,EAAE,SAFR;AAGTa,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE,QAJP;AAKTN,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ9BO,EAAAA,gBAAgB,EAAE;AACjBP,IAAAA,OAAO,EAAE;AADQ,GARY;AAW9BQ,EAAAA,MAAM,EAAE;AACLR,IAAAA,OAAO,EAAE,EADJ;AAELS,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,UAAU,EAAE,OAHP;AAILC,IAAAA,SAAS,EAAE,QAJN;AAKLC,IAAAA,KAAK,EAAE,OALF;AAMLC,IAAAA,YAAY,EAAE,EANT;AAOLC,IAAAA,WAAW,EAAE,CAPR;AAQLC,IAAAA,WAAW,EAAE;AARR,GAXsB;AAqB7B/B,EAAAA,eAAe,EAAE;AACfgC,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfzB,IAAAA,eAAe,EAAE,OAHF;AAIfqB,IAAAA,YAAY,EAAE,EAJC;AAKfR,IAAAA,UAAU,EAAE,QALG;AAMfM,IAAAA,SAAS,EAAE,QANI;AAOfX,IAAAA,OAAO,EAAE,EAPM;AAQfc,IAAAA,WAAW,EAAE,CARE;AASfC,IAAAA,WAAW,EAAE;AATE,GArBY;AAgC7BlB,EAAAA,iBAAiB,EAAE;AACfmB,IAAAA,KAAK,EAAE,KADQ;AAEfC,IAAAA,MAAM,EAAE,EAFO;AAGfZ,IAAAA,UAAU,EAAE,QAHG;AAIfL,IAAAA,OAAO,EAAE;AAJM,GAhCU;AAsC7BkB,EAAAA,eAAe,EAAE;AACbD,IAAAA,MAAM,EAAE;AADK,GAtCY;AAyC7BlC,EAAAA,4BAA4B,EAAE;AAC1BS,IAAAA,eAAe,EAAE,MADS;AAE1BQ,IAAAA,OAAO,EAAE,EAFiB;AAG1BgB,IAAAA,KAAK,EAAE,KAHmB;AAI1BD,IAAAA,WAAW,EAAE,SAJa;AAK1BF,IAAAA,YAAY,EAAE,EALY;AAM1BR,IAAAA,UAAU,EAAE,QANc;AAO1BY,IAAAA,MAAM,EAAE;AAPkB,GAzCD;AAkD7BlB,EAAAA,aAAa,EAAE;AACXP,IAAAA,eAAe,EAAE,SADN;AAEXwB,IAAAA,KAAK,EAAE,KAFI;AAGXC,IAAAA,MAAM,EAAE,EAHG;AAIXE,IAAAA,SAAS,EAAC;AAJC,GAlDc;AAwD7BlB,EAAAA,UAAU,EAAE;AACRW,IAAAA,KAAK,EAAE,OADC;AAERQ,IAAAA,UAAU,EAAE,MAFJ;AAGRf,IAAAA,UAAU,EAAE,QAHJ;AAIRM,IAAAA,SAAS,EAAE,QAJH;AAKRF,IAAAA,QAAQ,EAAE;AALF;AAxDiB,CAAlB,CAAf;AAiEA,eAAevC,oBAAf","sourcesContent":["import 'react-native-gesture-handler';\r\nimport React, { useState } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Button, TouchableOpacity} from 'react-native';\r\n\r\nconst InitialQuestionnaire = ({navigation}) => {\r\n  const [questionNum, setQuestionNum] = useState(1);\r\n  const [questionText, setQuestionText] = useState(\"I feel totally comfortable in my understanding of: \\n\\n • What employers want in an employee \\n • The tools I need to conduct an effective job search \\n • Goal setting and am able to set effective goals \\n • Setting a schedule for my daily tasks during job search \\n • How to dress appropriately for the job search\");\r\n  const [response, getQuestionResponse] = useState();\r\n  const responses = new Array(8);\r\n  const ReviewQuestionnaire = ({qNum}) => {\r\n    return (\r\n        <View style = {styles.reviewQuestionnaireContainer}>\r\n            <Text> Question {qNum} </Text>\r\n            <Text> Question 1.........</Text>\r\n            <View style = {styles.buttonContainer}>\r\n                <Button title = \"Agree\"/>\r\n            </View>\r\n        </View>\r\n    )\r\n  }\r\n\r\n  const changeQuestion = () => {\r\n    if (questionNum == 1)\r\n      setQuestionText(\"I feel totally comfortable in my understanding of: \\n\\n • What employers want in an employee \\n • The tools I need to conduct an effective job search \\n • Goal setting and am able to set effective goals \\n • Setting a schedule for my daily tasks during job search \\n • How to dress appropriately for the job search\");\r\n    else if (questionNum == 2)\r\n        setQuestionText(\"This is Question 2\");\r\n    else if (questionNum == 3)\r\n        setQuestionText(\"This is Question 3\");\r\n    else if (questionNum == 4)\r\n        setQuestionText(\"This is Question 4\");\r\n    else if (questionNum == 5)\r\n        setQuestionText(\"This is Question 5\");\r\n    else if (questionNum == 6)\r\n        setQuestionText(\"This is Question 6\");\r\n    else if (questionNum == 7)\r\n        setQuestionText(\"This is Question 7\");\r\n    else if (questionNum == 8)\r\n        setQuestionText(\"This is Question 8\");\r\n  }\r\n\r\n  const nextQuestion = () => {\r\n    if (questionNum < 8) {\r\n        setQuestionNum(questionNum+1);\r\n        changeQuestion();\r\n    }\r\n    else {\r\n        navigation.navigate('ReviewQuestionnaire')\r\n    }\r\n  }\r\n  const prevQuestion = () => {\r\n    if (questionNum > 1) {\r\n        setQuestionNum(questionNum-1);\r\n        changeQuestion();\r\n    }\r\n  }\r\n  const questionResponse = (response) => {\r\n    responses[questionNum] = response;\r\n  //store user's response to question\r\n  }\r\n\r\n  changeColor = () => {\r\n   setState={\r\n        backgroundColor: 'white',\r\n        backgroundColor2: 'white',\r\n        pressed: false,\r\n      }\r\n      if(!this.state.pressed){\r\n         this.setState({ pressed: true,backgroundColor: '#004473', backgroundColor2: 'white'});\r\n      } else {\r\n        this.setState({ pressed: false, backgroundColor: 'white' ,backgroundColor2: '#004473'});\r\n      }\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n\r\n      <Text>Question Question #{ questionNum } </Text>\r\n\r\n      <View style = {styles.questionContainer}>\r\n        <Text> {questionText} </Text>\r\n      </View>\r\n      <TouchableOpacity\r\n              style = {styles.buttonContainer}\r\n              onPress={(event) => questionResponse(\"Strongly Disagree\")}>\r\n              <Text>Strongly Disagree</Text>\r\n            </TouchableOpacity>\r\n      <TouchableOpacity\r\n              style = {[styles.buttonContainer, {backgroundColor: this.state.backgroundColor}]}\r\n              onPress={() => this.changeColor()}>\r\n              <Text>Strongly Disagree</Text>\r\n      </TouchableOpacity>\r\n      <TouchableOpacity\r\n                    style = {[styles.buttonContainer, {backgroundColor: this.state.backgroundColor}]}\r\n                    onPress={() => this.changeColor()}>\r\n                    <Text>Strongly Disagree</Text>\r\n            </TouchableOpacity>\r\n      <TouchableOpacity\r\n              style = {styles.buttonContainer}\r\n              onPress={(event) => questionResponse(\"Strongly Disagree\")}>\r\n              <Text>Strongly Disagree</Text>\r\n            </TouchableOpacity>\r\n      <TouchableOpacity\r\n        style = {styles.buttonContainer}\r\n        onPress={(event) => questionResponse(\"Strongly Disagree\")}>\r\n        <Text>Strongly Disagree</Text>\r\n      </TouchableOpacity>\r\n      {/*<View style={{ flexDirection: 'row', margin: 10 }}>\r\n            <View style = {styles.navBtnContainer}>\r\n                <Button\r\n                  onPress={prevQuestion}\r\n                  title=\"Back\"\r\n                />\r\n            </View>\r\n\r\n            <View style = {styles.navBtnContainer}>\r\n                <Button\r\n                  onPress={nextQuestion}\r\n                  title=\"Next\"\r\n                />\r\n            </View>\r\n      </View>*/}\r\n\r\n       <TouchableOpacity\r\n           style = {[styles.defaultButton, {padding: 10}]}\r\n           onPress={() => navigation.navigate('AssessmentScore')}>\r\n           <Text style = {styles.textButton}> Submit </Text>\r\n       </TouchableOpacity>\r\n\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#EFEFEF',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    padding: 40\r\n   },\r\n   contentContainer: {\r\n    padding: 20\r\n   },\r\n   button: {\r\n      padding: 20,\r\n      fontSize: 15,\r\n      fontFamily: \"arial\",\r\n      textAlign: \"center\",\r\n      color: \"white\",\r\n      borderRadius: 20,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n    },\r\n    buttonContainer: {\r\n      width: \"20%\",\r\n      margin: 10,\r\n      backgroundColor: \"white\",\r\n      borderRadius: 40,\r\n      alignItems: \"center\",\r\n      textAlign: \"center\",\r\n      padding: 20,\r\n      borderWidth: 2,\r\n      borderColor: \"#004473\"\r\n    },\r\n    questionContainer: {\r\n        width: \"70%\",\r\n        margin: 20,\r\n        alignItems: \"center\",\r\n        padding: 10\r\n    },\r\n    navBtnContainer: {\r\n        margin: 20\r\n    },\r\n    reviewQuestionnaireContainer: {\r\n        backgroundColor: \"#FFF\",\r\n        padding: 10,\r\n        width: \"30%\",\r\n        borderColor: \"#004473\",\r\n        borderRadius: 20,\r\n        alignItems: \"center\",\r\n        margin: 10\r\n    },\r\n    defaultButton: {\r\n        backgroundColor: \"#004473\",\r\n        width: \"15%\",\r\n        margin: 20,\r\n        marginTop:30\r\n    },\r\n    textButton: {\r\n        color: \"white\",\r\n        fontWeight: \"bold\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n        fontSize: 18\r\n    },\r\n});\r\n\r\nexport default InitialQuestionnaire;\r\n"]},"metadata":{},"sourceType":"module"}