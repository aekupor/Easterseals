{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\angel\\\\OneDrive\\\\Documents\\\\Code\\\\Easterseals\\\\Easterseals\\\\App.js\";\nimport React, { useState } from 'react';\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nexport default function App() {\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      questionNum = _useState2[0],\n      setQuestionNum = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      questionText = _useState4[0],\n      setQuestionText = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      response = _useState6[0],\n      getQuestionResponse = _useState6[1];\n\n  var nextQuestion = function nextQuestion() {\n    setQuestionNum(questionNum + 1);\n    if (questionNum == 1) setQuestionText(\"I feel totally comfortable in my understanding of: {'\\n'} • What employers want in an employee • The tools I need to conduct an effective job search • Goal setting and am able to set effective goals • Setting a schedule for my daily tasks during job search • How to dress appropriately for the job search\");else setQuestionText(\"This is not Question 1\");\n  };\n\n  var questionResponse = function questionResponse(response) {};\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"Question \", questionNum), React.createElement(View, {\n    style: styles.questionContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, \" \", questionText, \" \"), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, \" I feel totally comfortable in my understanding of: \\u2022 What employers want in an employee \\u2022 The tools I need to conduct an effective job search \\u2022 Goal setting and am able to set effective goals \\u2022 Setting a schedule for my daily tasks during job search \\u2022 How to dress appropriately for the job search\")), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress(event) {\n      return questionResponse(\"Strongly Agree\");\n    },\n    title: \"Strongly Agree\",\n    accessibilityLabel: \"Next Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress(event) {\n      return questionResponse(\"Agree\");\n    },\n    title: \"Agree\",\n    accessibilityLabel: \"Next Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress(event) {\n      return questionResponse(\"Disagree\");\n    },\n    title: \"Disagree\",\n    accessibilityLabel: \"Next Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: function onPress(event) {\n      return questionResponse(\"Strongly Disagree\");\n    },\n    title: \"Strongly Disagree\",\n    accessibilityLabel: \"Next Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Button, {\n    onPress: nextQuestion,\n    title: \"Next\",\n    accessibilityLabel: \"Next Question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  })), React.createElement(StatusBar, {\n    style: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    padding: 20,\n    fontSize: 15,\n    fontFamily: \"arial\",\n    textAlign: \"center\",\n    color: \"#0061A5\",\n    borderRadius: 10,\n    borderWidth: 1,\n    borderColor: '#fff'\n  },\n  buttonContainer: {\n    width: \"20%\",\n    margin: 10,\n    backgroundColor: \"#004473\"\n  },\n  questionContainer: {\n    width: \"70%\",\n    margin: 20\n  }\n});","map":{"version":3,"sources":["C:/Users/angel/OneDrive/Documents/Code/Easterseals/Easterseals/App.js"],"names":["React","useState","StatusBar","App","questionNum","setQuestionNum","questionText","setQuestionText","response","getQuestionResponse","nextQuestion","questionResponse","styles","container","questionContainer","buttonContainer","event","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","button","padding","fontSize","fontFamily","textAlign","color","borderRadius","borderWidth","borderColor","width","margin"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport 'react-native-gesture-handler';\r\nimport { StatusBar } from 'expo-status-bar';\r\nimport { StyleSheet, Text, View, Button} from 'react-native';\r\n\r\nexport default function App() {\r\n  const [questionNum, setQuestionNum] = useState(1);\r\n  const [questionText, setQuestionText] = useState();\r\n  const [response, getQuestionResponse] = useState();\r\n  const nextQuestion = () => {\r\n    setQuestionNum(questionNum+1);\r\n    if (questionNum == 1)\r\n        setQuestionText(\"I feel totally comfortable in my understanding of: {'\\n'} • What employers want in an employee • The tools I need to conduct an effective job search • Goal setting and am able to set effective goals • Setting a schedule for my daily tasks during job search • How to dress appropriately for the job search\");\r\n    else\r\n        setQuestionText(\"This is not Question 1\");\r\n\r\n  }\r\n  const questionResponse = (response) => {\r\n  //store user's response to question\r\n  }\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text>Question { questionNum }</Text>\r\n\r\n      <View style = {styles.questionContainer}>\r\n        <Text> {questionText} </Text>\r\n        <Text> I feel totally comfortable in my understanding of: • What employers want in an employee • The tools I need to conduct an effective job search • Goal setting and am able to set effective goals • Setting a schedule for my daily tasks during job search • How to dress appropriately for the job search</Text>\r\n      </View>\r\n      <View style = {styles.buttonContainer}>\r\n          <Button\r\n            onPress={(event) => questionResponse(\"Strongly Agree\")}\r\n            title=\"Strongly Agree\"\r\n            accessibilityLabel=\"Next Question\"\r\n          />\r\n      </View>\r\n      <View style = {styles.buttonContainer}>\r\n          <Button\r\n            onPress={(event) => questionResponse(\"Agree\")}\r\n            title=\"Agree\"\r\n            accessibilityLabel=\"Next Question\"\r\n          />\r\n      </View>\r\n      <View style = {styles.buttonContainer}>\r\n          <Button\r\n            onPress={(event) => questionResponse(\"Disagree\")}\r\n            title=\"Disagree\"\r\n            accessibilityLabel=\"Next Question\"\r\n          />\r\n      </View>\r\n      <View style = {styles.buttonContainer}>\r\n          <Button\r\n            onPress={(event) => questionResponse(\"Strongly Disagree\")}\r\n            title=\"Strongly Disagree\"\r\n            accessibilityLabel=\"Next Question\"\r\n          />\r\n      </View>\r\n      <View style = {styles.buttonContainer}>\r\n            <Button\r\n              onPress={nextQuestion}\r\n              title=\"Next\"\r\n              accessibilityLabel=\"Next Question\"\r\n            />\r\n      </View>\r\n      <StatusBar style=\"auto\" />\r\n    </View>\r\n  );\r\n}\r\n//const NavButtons(props) => {\r\n//    return (\r\n//        <View style={[{ width: \"20%\", margin: 10, backgroundColor: \"#004473\" }]}>\r\n//              <Button\r\n//                //onPress={}\r\n//                title=\"Strongly Disagree\"\r\n//                accessibilityLabel=\"Next Question\"\r\n//              />\r\n//          </View>\r\n//    );\r\n//}\r\n//const Questions = (props) => {\r\n//    return (\r\n//        <View>\r\n//            <Text>\r\n//                Question Text Here {props.name}\r\n//            </Text>\r\n//            <Button\r\n//\r\n//    )\r\n//}\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n   },\r\n   button: {\r\n      padding: 20,\r\n      fontSize: 15,\r\n      fontFamily: \"arial\",\r\n      textAlign: \"center\",\r\n      color: \"#0061A5\",\r\n      borderRadius: 10,\r\n      borderWidth: 1,\r\n      borderColor: '#fff',\r\n    },\r\n    buttonContainer: {\r\n      width: \"20%\",\r\n      margin: 10,\r\n      backgroundColor: \"#004473\"\r\n    },\r\n    questionContainer: {\r\n        width: \"70%\",\r\n        margin: 20\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}